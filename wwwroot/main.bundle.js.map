<<<<<<< HEAD
{"version":3,"sources":["/Users/Michael/Projects/dojonames/client-src/$_gendir lazy","/Users/Michael/Projects/dojonames/client-src/app/api.service.ts","/Users/Michael/Projects/dojonames/client-src/app/app.component.css","/Users/Michael/Projects/dojonames/client-src/app/app.component.html","/Users/Michael/Projects/dojonames/client-src/app/app.component.ts","/Users/Michael/Projects/dojonames/client-src/app/app.module.ts","/Users/Michael/Projects/dojonames/client-src/environments/environment.ts","/Users/Michael/Projects/dojonames/client-src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\treturn new Promise(function(resolve, reject) { reject(new Error(\"Cannot find module '\" + req + \"'.\")); });\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../client-src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Michael/Projects/dojonames/client-src/$$_gendir lazy\n// module id = ../../../../../client-src/$$_gendir lazy recursive\n// module chunks = main","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/Rx';\n\n@Injectable()\nexport class ApiService {\n\n  constructor(private _http: Http) { }\n\n  getDeck(){\n    console.log(\"In API service call get deck\");\n    return this._http.get('/api/get_deck')\n    .map(data => data.json())\n    .toPromise();\n  }\n\n  updateDeck(cardId){\n    console.log(\"updating the deck now!\");\n    console.log(\"this is the card i am trying to update from the service\", cardId)\n    return this._http.get(`/api/update_deck/${cardId}`)\n    .map(data => data.json())\n    .toPromise();\n\n  }\n  makeNewGame()\n  {\n    console.log(\"going thru new game service\")\n    return this._http.get('/api/create_game_in_database')\n    .map(data => data.json())\n    .toPromise();\n  }\n  getGame()\n  {\n    console.log(\"update game in service\")\n    return this._http.get('/api/gameUpdate')\n    .map(data => data.json())\n    .toPromise();\n  }\n  gameList()\n  {\n    console.log(\"gameList\")\n    return this._http.get('/api/gameList')\n    .map(data => data.json())\n    .toPromise();\n  }\n  joinGame(GameId)\n  {\n    console.log(\"join game service\", GameId)\n    return this._http.get(`/api/join/${GameId}`)\n    .map(data => data.json())\n    .toPromise();\n  }\n  submitHint(hint, count)\n  {\n    console.log(\"submit hint api service\", hint, count)\n    return this._http.get(`/api/hint/${hint}/${count}`)\n    .map(data => data.json())\n    .toPromise();\n  }\n  endTurn()\n  {\n    console.log(\"end turn service\")\n    return this._http.get('/api/endTurn')\n    .map(data => data.json())\n    .toPromise();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/Michael/Projects/dojonames/client-src/app/api.service.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* font-family: 'Rubik', sans-serif;\\nfont-family: 'Roboto Mono', monospace; */\\nbody {\\n    color: white;\\n}\\n\\n.text {\\n    color: white;\\n    font-family: 'Rubik', sans-serif;\\n}\\n.rules-text{\\n    color: white;\\n    font-family: 'Roboto Mono', monospace;\\n    margin-top: 10px;\\n}\\n\\n.score {\\n    border-radius: 0px 0px 12px 12px;\\n    height: 3em;\\n    line-height: 3em;\\n    vertical-align: center;\\n    text-align: center;\\n    margin: 0;\\n    padding: 0;\\n    font-size: 2.5em;\\n}\\n.red-score {\\n    background: #f44336;\\n}\\n.blue-score {\\n    background: #3030FF;\\n}\\n.dojo-score {\\n    background: #E8BF81;\\n}\\n\\n.capitalize {\\n    text-transform: capitalize;\\n }\\n.card {\\n    border: 2px solid black;\\n    height: 90px;\\n    padding: 5px;\\n    margin: 10px;\\n    background: #B5FFB5;\\n    text-align: center;\\n    vertical-align: middle;\\n    line-height: 90px;   \\n    font-size: 1.25em;\\n    text-shadow: -1px 0 black, 0 1px black, 1px 0 black, 0 -1px black;\\n    color: snow;\\n    font-family: 'Rubik', sans-serif;\\n}\\n\\n.card-container {\\n    background: #424242;\\n}\\n\\n/* .redTurn{\\n    border: 50px solid red;\\n}\\n.blueTurn{\\n    border: 50px solid blue;\\n} */\\n.redCard {\\n    background: #FE9494;\\n}\\n\\n.blueCard {\\n    background: #6666FF;\\n}\\n\\n.whiteCard {\\n    background: #FFFEB6;\\n}\\n\\n.blackCard {\\n    background: #303030;\\n}\\n.testClass {\\n    background: yellow;\\n}\\n\\n.exposedRed {\\n    background: #f44336;\\n}\\n\\n.exposedBlue {\\n    background: #3030FF;\\n}\\n\\n.exposedWhite {\\n    background: #E8BF81;\\n}\\n\\n.exposedBlack {\\n    background: black;\\n}\\n\\ntd > .dn-button  {\\n    background: #16C098;\\n    color: white;\\n    border: 1px solid #424242;\\n    padding: 12px;\\n    border-radius: 8px;\\n    width: 12em;\\n}\\n.dn-button-start {\\n    background: #16C098;\\n    color: white;\\n    border: 1px solid #424242;\\n    font-family: 'Rubik', sans-serif;\\n    width: 16em;\\n    border-radius: 8px;\\n    padding: 5px;\\n\\n}\\n\\n.table {\\n    border-radius: 5px;\\n    width: 60%;\\n    margin: 0px auto;\\n    float: none;\\n    text-align: center;\\n    margin-top: 1.5em;\\n    margin-bottom: 1.5em;\\n    font-family: 'Rubik', sans-serif;\\n}\\n.table > tbody > tr > td {\\n    vertical-align: middle;\\n}\\n.table-header{\\n    background: #E8BF81;\\n    color: white;\\n    height: 2em;\\n    border-radius: 5px;\\n    font-size: 3em;\\n    \\n}\\n\\n.table>tbody>tr>td{\\n    border-top: 1px solid #2e2e2e;\\n}\\n\\n.game-table {\\n    background: #2e2e2e;\\n}\\n.game-row{\\n    color: white;\\n    font-size: 1.5em;\\n}\\n.table-curved {\\n    border-collapse: separate;\\n}\\n.table-curved {\\n    /* border: solid #ccc 1px; */\\n    border-radius: 6px;\\n}\\n.table-curved td, .table-curved th {\\n    /* border-left: 1px solid inherit;\\n    border-top: 1px solid inherit; */\\n}\\n.table-curved tr > *:first-child {\\n    border-left: 0px;\\n}\\n.table-curved tr:first-child > * {\\n    border-top: 0px;\\n}\\n\\n.hint-table {\\n    text-align: left;\\n}\\n.hint-labels {\\n    color: #626262;\\n    font-size: 2.5em;\\n}\\n.hint-hints{\\n    color: white;\\n    font-size: 3em;\\n}\\n\\n.hint-label{\\n    color: white;\\n    font-size: 2em;\\n    font-family: 'Rubik', sans-serif;\\n}\\n\\n.dn-button-hint {\\n    background: #16C098;\\n    color: white;\\n    border: 1px solid #424242;\\n    font-family: 'Rubik', sans-serif;\\n    width: 100%;\\n    border-radius: 8px;\\n    padding: 10px;\\n    font-size: 2em;\\n\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Michael/Projects/dojonames/client-src/app/app.component.css\n// module id = ../../../../../client-src/app/app.component.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n<div [ngClass]=\\\"{'redTurn': phase != 'waiting' && (turn == 'red' || phase =='redWin'), 'blueTurn': phase !='waiting' && (turn == 'blue' || phase == 'blueWin')}\\\" class='container-fluid'>\\n  <div class='row' *ngIf=\\\"phase !== ''\\\">\\n    <div class='col-sm-3'>\\n      <h3 class='text score dojo-score'>DojoNames</h3>\\n    </div>\\n    <div class='col-sm-3'>\\n      <p class='rules-text'>\\n        Each turn a dojomaster will decide on a hint and the number\\n        of cards associate with that hint.</p>\\n        <p class='rules-text'>Members of the same team will then take guesses based on that hint\\n          to try and reveal their team's cards.\\n      </p>\\n    </div>\\n    <div class='col-sm-3'>\\n      <h3 class='text score red-score'>Red Score:  {{redTeamScore}}</h3>\\n    </div>\\n    <div class='col-sm-3'>\\n      <h3 class='text score blue-score'>Blue Score:  {{blueTeamScore}}</h3>\\n    </div>\\n\\n\\n  </div>\\n\\n  <!-- <div class='col-md-12'> -->\\n    <div class='col-md-4'>\\n\\n      <div *ngIf=\\\"phase == 'waiting'\\\">\\n        <h3>Waiting for game to start</h3>\\n      </div>\\n\\n      <div *ngIf=\\\"phase == 'hinting' && client== 'guessing'\\\">\\n        <h3>Waiting for Hint...</h3>\\n      </div>\\n      <div *ngIf=\\\"phase == 'redWin'\\\">\\n          <h3>Red Team Wins!</h3>\\n      </div>\\n    \\n      <div *ngIf=\\\"phase == 'blueWin'\\\">\\n        <h3>Blue Team Wins!</h3>\\n      </div>\\n    \\n\\n\\n      <div *ngIf=\\\"phase!='waiting'\\\">\\n          <div *ngIf=\\\"phase!='waiting'\\\">\\n            <h3 class='text'><span class=\\\"capitalize\\\">{{turn}}</span> team's turn</h3>\\n          </div>\\n        </div>\\n      <div *ngIf=\\\"phase == 'hinting' && client == 'hinting'\\\">\\n        <h3 class='text'>Hinting Phase</h3>\\n        <form (submit)=\\\"submitHint()\\\">\\n          <div class='form-group'>\\n            <label class=\\\"hint-label\\\">Hint: </label>\\n            <input type=\\\"text\\\" name=\\\"hint\\\" [(ngModel)]=\\\"hint\\\" class='form-control' placeholder=\\\"Hint\\\">\\n          </div>\\n          <div class='form-group'>\\n          <label class=\\\"hint-label\\\"># of cards: </label>\\n          <input type=\\\"text\\\" name=\\\"count\\\" [(ngModel)]=\\\"count\\\" class='form-control' placeholder=\\\"1\\\">\\n          </div>\\n          <input type=\\\"submit\\\" value=\\\"Submit Hint\\\" class='btn btn-default dn-button-hint'>\\n        </form>\\n      </div>\\n\\n      <div *ngIf=\\\"phase == 'guessing' && client=='guessing'\\\">\\n        <h3>Hint: {{LastHint}}</h3>\\n        <h3># of Cards : {{HintCount}}</h3>\\n        <button (click)=\\\"endTurn()\\\">End Turn</button>\\n\\n        <table class='table hint-table'>\\n          <tr class='hint-labels'>\\n            <td>Hint</td>\\n            <td>#</td>\\n          </tr>\\n          <tr class='hint-hints'>\\n            <td>{{LastHint}}</td>\\n            <td>{{HintCount}}</td>\\n          </tr>\\n        </table>\\n      </div>\\n\\n    </div>\\n\\n    <div class='col-md-8'>\\n      <div class='card-container'>\\n        <div *ngIf=\\\"client == 'hinting'\\\">\\n          <div class=\\\"row\\\">\\n              <div *ngFor=\\\"let card of cards; let i = index\\\">\\n                <div class=\\\"clearfix\\\" *ngIf=\\\"i % 5 == 0\\\"></div>\\n                <div class=\\\"col-sm-2 card\\\" *ngIf=\\\"i % 5 == 0\\\" [ngClass]=\\\"{'redCard': card.color == 'red' && !card.isExposed, 'blueCard': card.color == 'blue' && !card.isExposed, 'whiteCard': card.color == 'white' && !card.isExposed, 'blackCard': card.color == 'black' && !card.isExposed, 'testClass': card.isExposed, 'exposedRed': card.isExposed && card.color == 'red', 'exposedBlue': card.isExposed && card.color == 'blue', 'exposedWhite': card.isExposed && card.color == 'white', 'exposedBlack': card.isExposed && card.color == 'black'}\\\">{{card.text}}</div>\\n                <div class=\\\"col-sm-2 card\\\" *ngIf=\\\"i % 5 != 0\\\"[ngClass]=\\\"{'redCard': card.color == 'red' && !card.isExposed, 'blueCard': card.color == 'blue' && !card.isExposed, 'whiteCard': card.color == 'white' && !card.isExposed, 'blackCard': card.color == 'black' && !card.isExposed, 'testClass': card.isExposed, 'exposedRed': card.isExposed && card.color == 'red', 'exposedBlue': card.isExposed && card.color == 'blue', 'exposedWhite': card.isExposed && card.color == 'white', 'exposedBlack': card.isExposed && card.color == 'black'}\\\">{{card.text}}</div>\\n              </div>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"client == 'guessing'\\\">\\n            <div class=\\\"row\\\">\\n                <div *ngFor=\\\"let card of cards; let i = index\\\">\\n                  <div class=\\\"clearfix\\\" *ngIf=\\\"i % 5 == 0\\\"></div>\\n                  <div class=\\\"col-md-offset-1 col-md-2 card\\\" *ngIf=\\\"i % 5 == 0\\\" (click)=\\\"clickCard(i)\\\" [ngClass]=\\\"{'exposedRed': card.isExposed && card.color == 'red', 'exposedBlue': card.isExposed && card.color == 'blue', 'exposedWhite': card.isExposed && card.color == 'white', 'exposedBlack': card.isExposed && card.color == 'black'}\\\">{{card.text}}</div>\\n                  <div class=\\\"col-md-2 card col-md-offset-1\\\" *ngIf=\\\"i % 5 != 0\\\" (click)=\\\"clickCard(i)\\\" [ngClass]=\\\"{'exposedRed': card.isExposed && card.color == 'red', 'exposedBlue': card.isExposed && card.color == 'blue', 'exposedWhite': card.isExposed && card.color == 'white', 'exposedBlack': card.isExposed && card.color == 'black'}\\\">{{card.text}}</div>\\n                </div>\\n            </div>\\n        </div>\\n      </div>\\n\\n    </div>\\n    <div class='col-md-12'>\\n      <div *ngIf=\\\"client == 'waiting'\\\">\\n          <button *ngIf=\\\"client =='waiting'\\\" (click)=\\\"newGame()\\\" class='btn btn-default dn-button-start center-block'>Start a new game!</button>\\n        <table class='table game-table table-curved'>\\n          <tr>\\n            <td align=\\\"center\\\" colspan=\\\"2\\\" class=\\\"table-header\\\">DojoNames</td>\\n          </tr>\\n          <tr *ngFor=\\\"let game of games\\\">\\n            <td class='game-row'  width=\\\"50%\\\">{{game.gameId}}</td>\\n            <td width=\\\"50%\\\"><button (click) = \\\"joinGame(game.gameId)\\\" class=\\\"btn btn-default dn-button\\\">Join</button></td>\\n          </tr>\\n        </table>\\n\\n\\n        <!-- <ul>\\n          <li *ngFor=\\\"let game of games\\\">\\n            <button (click) = \\\"joinGame(game.gameId)\\\" class=\\\"btn btn-default dn-button\\\">{{game.gameId}} Join Game</button>\\n          </li>\\n        </ul> -->\\n      </div>\\n\\n    </div>\\n  <!-- </div> -->\\n</div>\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Michael/Projects/dojonames/client-src/app/app.component.html\n// module id = ../../../../../client-src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { ApiService } from './api.service';\nimport { Observable } from \"rxjs/Rx\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n  GameId;\n  cards;\n  client = \"waiting\";\n  turn = \"\";\n  phase = \"\";\n  redTeamScore = 0;\n  blueTeamScore = 0;\n  LastHint = \"\";\n  hint=\"\";\n  count = 0;\n  HintCount;\n  games;\n\n  constructor(private _apiService: ApiService) {}\n\n  ngOnInit(){\n    // this._apiService.getDeck()\n    // .then(cards => {this.cards = cards; console.log('got deck', this.cards)})\n    // .catch(err => {console.log(err)});\n    this._apiService.gameList()\n    .then(games => {this.games = games; console.log('got game list', games)})\n    .catch(err => {console.log(err)});\n    this.intervalCall();\n  }\n\n  clickCard(cardIdx){\n    console.log(this.cards[cardIdx]);//update the local copy\n    if (!this.cards[cardIdx].isExposed && this.phase == \"guessing\"){\n        this.redTeamScore++;\n        this.cards[cardIdx].isExposed = true;\n        console.log(\"this is the card i am trying to update from the component\", this.cards[cardIdx])\n        this._apiService.updateDeck(this.cards[cardIdx].cardId)\n        .then(response => {console.log('response: ', response); this.updateGame();})\n        .catch(err => {console.log(err)});\n      }\n  }\n\n  newGame(){\n    console.log(\"clicked the new game button\")\n    this._apiService.makeNewGame()\n    .then(response => {console.log(response); this.updateGame();this.client=\"hinting\";\n      // this._apiService.getDeck()\n      // .then(cards => {this.cards = cards; this.client=\"codeMaster\"; console.log('got deck', this.cards)})\n      // .catch(err => {console.log(err)});\n    })\n    .catch(err => {console.log(err)});\n  }\n  updateGame(){\n    this._apiService.getGame()\n    .then(game => {this.turn = game.turn; this.redTeamScore = game.redScore; this.blueTeamScore= game.blueScore; this.phase = game.phase; this.LastHint = game.lastHint; this.HintCount = game.hintCount; this.GameId = game.gameId; console.log('got game', game)})\n    .catch(err => {console.log(err)});\n    this._apiService.getDeck()\n    .then(cards => {this.cards = cards; console.log('got deck', this.cards)})\n    .catch(err => {console.log(err)});\n  }\n  intervalCall(){\n      Observable.interval(1000).subscribe(x => {\n        this.updateGame();\n      })\n  }\n  joinGame(GameId){\n    this._apiService.joinGame(GameId)\n    .then(() => {this.client = \"guessing\"; this.updateGame();})\n    .catch(err => {console.log(err)})\n  }\n  submitHint(){\n    this._apiService.submitHint(this.hint, this.count);\n    this.updateGame();\n    this.hint=\"\";\n    this.count=0;\n  }\n  endTurn(){\n    this._apiService.endTurn();\n    this.updateGame();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/Michael/Projects/dojonames/client-src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ApiService } from './api.service';\nimport { AppComponent } from './app.component';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule } from '@angular/forms';\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    FormsModule\n  ],\n  providers: [ApiService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/Michael/Projects/dojonames/client-src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/Michael/Projects/dojonames/client-src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /Users/Michael/Projects/dojonames/client-src/main.ts"],"sourceRoot":"webpack:///"}
=======
{"version":3,"sources":["C:/Users/miked/Desktop/DojoAssignments/netCore/dojonames/client-src/$_gendir lazy","C:/Users/miked/Desktop/DojoAssignments/netCore/dojonames/client-src/app/api.service.ts","C:/Users/miked/Desktop/DojoAssignments/netCore/dojonames/client-src/app/app.component.css","C:/Users/miked/Desktop/DojoAssignments/netCore/dojonames/client-src/app/app.component.html","C:/Users/miked/Desktop/DojoAssignments/netCore/dojonames/client-src/app/app.component.ts","C:/Users/miked/Desktop/DojoAssignments/netCore/dojonames/client-src/app/app.module.ts","C:/Users/miked/Desktop/DojoAssignments/netCore/dojonames/client-src/environments/environment.ts","C:/Users/miked/Desktop/DojoAssignments/netCore/dojonames/client-src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA,+CAA+C,wDAAwD,EAAE;AACzG;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,mF;;;;;;;;;;;;;;;;;;;;;;ACN2C;AACN;AACpB;AAGjB,IAAa,UAAU;IAErB,oBAAoB,KAAW;QAAX,UAAK,GAAL,KAAK,CAAM;IAAI,CAAC;IAEpC,4BAAO,GAAP;QACE,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;QAC5C,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,eAAe,CAAC;aACrC,GAAG,CAAC,cAAI,IAAI,WAAI,CAAC,IAAI,EAAE,EAAX,CAAW,CAAC;aACxB,SAAS,EAAE,CAAC;IACf,CAAC;IAED,+BAAU,GAAV,UAAW,MAAM;QACf,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QACtC,OAAO,CAAC,GAAG,CAAC,yDAAyD,EAAE,MAAM,CAAC;QAC9E,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,sBAAoB,MAAQ,CAAC;aAClD,GAAG,CAAC,cAAI,IAAI,WAAI,CAAC,IAAI,EAAE,EAAX,CAAW,CAAC;aACxB,SAAS,EAAE,CAAC;IAEf,CAAC;IACD,gCAAW,GAAX;QAEE,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC;QAC1C,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,8BAA8B,CAAC;aACpD,GAAG,CAAC,cAAI,IAAI,WAAI,CAAC,IAAI,EAAE,EAAX,CAAW,CAAC;aACxB,SAAS,EAAE,CAAC;IACf,CAAC;IACD,4BAAO,GAAP;QAEE,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC;QACrC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,iBAAiB,CAAC;aACvC,GAAG,CAAC,cAAI,IAAI,WAAI,CAAC,IAAI,EAAE,EAAX,CAAW,CAAC;aACxB,SAAS,EAAE,CAAC;IACf,CAAC;IACD,6BAAQ,GAAR;QAEE,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;QACvB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,eAAe,CAAC;aACrC,GAAG,CAAC,cAAI,IAAI,WAAI,CAAC,IAAI,EAAE,EAAX,CAAW,CAAC;aACxB,SAAS,EAAE,CAAC;IACf,CAAC;IACD,6BAAQ,GAAR,UAAS,MAAM;QAEb,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,MAAM,CAAC;QACxC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,eAAa,MAAQ,CAAC;aAC3C,GAAG,CAAC,cAAI,IAAI,WAAI,CAAC,IAAI,EAAE,EAAX,CAAW,CAAC;aACxB,SAAS,EAAE,CAAC;IACf,CAAC;IACD,+BAAU,GAAV,UAAW,IAAI,EAAE,KAAK;QAEpB,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,IAAI,EAAE,KAAK,CAAC;QACnD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,eAAa,IAAI,SAAI,KAAO,CAAC;aAClD,GAAG,CAAC,cAAI,IAAI,WAAI,CAAC,IAAI,EAAE,EAAX,CAAW,CAAC;aACxB,SAAS,EAAE,CAAC;IACf,CAAC;IACD,4BAAO,GAAP;QAEE,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC;QAC/B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC;aACpC,GAAG,CAAC,cAAI,IAAI,WAAI,CAAC,IAAI,EAAE,EAAX,CAAW,CAAC;aACxB,SAAS,EAAE,CAAC;IACf,CAAC;IAEH,iBAAC;AAAD,CAAC;AA9DY,UAAU;IADtB,yEAAU,EAAE;yDAGgB,2DAAI,oBAAJ,2DAAI;GAFpB,UAAU,CA8DtB;AA9DsB;;;;;;;;;ACLvB;AACA;;;AAGA;AACA,gCAAiC,gCAAgC,sBAAsB,qBAAqB,qBAAqB,4BAA4B,2BAA2B,+BAA+B,2BAA2B,0BAA0B,0EAA0E,oBAAoB,KAAK,iBAAiB,+BAA+B,KAAK,cAAc,gCAAgC,KAAK,cAAc,4BAA4B,KAAK,mBAAmB,4BAA4B,KAAK,oBAAoB,4BAA4B,KAAK,oBAAoB,4BAA4B,KAAK,gBAAgB,2BAA2B,KAAK,qBAAqB,wBAAwB,KAAK,sBAAsB,yBAAyB,KAAK,uBAAuB,2BAA2B,KAAK,uBAAuB,0BAA0B,KAAK;;AAEv6B;;;AAGA;AACA,2C;;;;;;;ACXA,+GAA+G,8IAA8I,uFAAuF,cAAc,8BAA8B,eAAe,6DAA6D,MAAM,uyBAAuyB,UAAU,kCAAkC,WAAW,gYAAgY,mKAAmK,gdAAgd,KAAK,WAAW,oFAAoF,gdAAgd,KAAK,WAAW,uLAAuL,gNAAgN,6NAA6N,KAAK,WAAW,gIAAgI,6NAA6N,KAAK,WAAW,mXAAmX,aAAa,mG;;;;;;;;;;;;;;;;;;;;;;ACA9pI;AACC;AACN;AAOrC,IAAa,YAAY;IAevB,sBAAoB,WAAuB;QAAvB,gBAAW,GAAX,WAAW,CAAY;QAd3C,UAAK,GAAG,KAAK,CAAC;QAGd,WAAM,GAAG,SAAS,CAAC;QACnB,SAAI,GAAG,EAAE,CAAC;QACV,UAAK,GAAG,EAAE,CAAC;QACX,iBAAY,GAAG,CAAC,CAAC;QACjB,kBAAa,GAAG,CAAC,CAAC;QAClB,aAAQ,GAAG,EAAE,CAAC;QACd,SAAI,GAAC,EAAE,CAAC;QACR,UAAK,GAAG,CAAC,CAAC;IAIoC,CAAC;IAE/C,+BAAQ,GAAR;QAAA,iBAQC;QAPC,6BAA6B;QAC7B,4EAA4E;QAC5E,qCAAqC;QACrC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;aAC1B,IAAI,CAAC,eAAK,IAAK,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,KAAK,CAAC,GAAC,CAAC;aACxE,KAAK,CAAC,aAAG,IAAK,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAC,CAAC,CAAC;QAClC,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,gCAAS,GAAT,UAAU,OAAO;QAAjB,iBAWC;QAVC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,wBAAuB;QACxD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,SAAS,IAAI,IAAI,CAAC,KAAK,IAAI,UAAU,CAAC,EAAC;YAC5D,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC;YACrC,OAAO,CAAC,GAAG,CAAC,2DAA2D,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAC7F,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC;iBACtD,IAAI,CAAC,kBAAQ,IAAK,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC,CAAC,KAAI,CAAC,UAAU,EAAE,CAAC,EAAC,CAAC;iBAC3E,KAAK,CAAC,aAAG,IAAK,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAC,CAAC,CAAC;YAClC,IAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC;IACL,CAAC;IAED,8BAAO,GAAP;QAAA,iBASC;QARC,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC;QAC1C,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE;aAC7B,IAAI,CAAC,kBAAQ;YAAK,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAAC,KAAI,CAAC,UAAU,EAAE,CAAC;YAAA,KAAI,CAAC,MAAM,GAAC,SAAS,CAAC;YAChF,6BAA6B;YAC7B,sGAAsG;YACtG,qCAAqC;QACvC,CAAC,CAAC;aACD,KAAK,CAAC,aAAG,IAAK,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAC,CAAC,CAAC;IACpC,CAAC;IACD,iCAAU,GAAV;QAAA,iBAUC;QATC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE;aACzB,IAAI,CAAC,cAAI,IAAK,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAI,CAAC,aAAa,GAAE,IAAI,CAAC,SAAS,CAAC,CAAC,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,GAAC,CAAC;aAC/P,KAAK,CAAC,aAAG,IAAK,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAC,CAAC,CAAC;QAClC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE;aACzB,IAAI,CAAC,eAAK,IAAK,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,KAAI,CAAC,KAAK,CAAC,GAAC,CAAC;aACxE,KAAK,CAAC,aAAG,IAAK,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAC,CAAC,CAAC;QAClC,EAAE,EAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,EAAC;QAE9B,CAAC;IACH,CAAC;IACD,mCAAY,GAAZ;QAAA,iBAMC;QALC,CAAC;YACC,mDAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,WAAC,IAAI,YAAI,CAAC,KAAK,IAAI,KAAI,CAAC,MAAM,IAAI,KAAI,CAAC,KAAK,IAAI,SAAS,EAApD,CAAoD,CAAC,CAAC,SAAS,CAAC,WAAC;gBACxG,KAAI,CAAC,UAAU,EAAE,CAAC;YACpB,CAAC,CAAC;QACJ,CAAC;IACH,CAAC;IACD,+BAAQ,GAAR,UAAS,MAAM;QAAf,iBAIC;QAHC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC;aAChC,IAAI,CAAC,cAAO,KAAI,CAAC,MAAM,GAAG,UAAU,CAAC,CAAC,KAAI,CAAC,UAAU,EAAE,CAAC,EAAC,CAAC;aAC1D,KAAK,CAAC,aAAG,IAAK,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAC,CAAC;IACnC,CAAC;IACD,iCAAU,GAAV;QACE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QACnD,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,IAAI,GAAC,EAAE,CAAC;QACb,IAAI,CAAC,KAAK,GAAC,CAAC,CAAC;QACb,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IACD,8BAAO,GAAP;QACE,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;QAC3B,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IACH,mBAAC;AAAD,CAAC;AApFY,YAAY;IALxB,wEAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,iFAAmC;QACnC,gFAAkC;KACnC,CAAC;yDAgBiC,gEAAU,oBAAV,gEAAU;GAfhC,YAAY,CAoFxB;AApFwB;;;;;;;;;;;;;;;;;;;;;;;ACTiC;AACjB;AACE;AACI;AACJ;AACE;AAa7C,IAAa,SAAS;IAAtB;IAAyB,CAAC;IAAD,gBAAC;AAAD,CAAC;AAAb,SAAS;IAZrB,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,oEAAY;SACb;QACD,OAAO,EAAE;YACP,gFAAa;YACb,iEAAU;YACV,mEAAW;SACZ;QACD,SAAS,EAAE,CAAC,gEAAU,CAAC;QACvB,SAAS,EAAE,CAAC,oEAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CAAI;AAAJ;;;;;;;;;AClBtB;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEhF,mFALmF;AAK5E,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;ACP6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,+EAAc,EAAE,CAAC;AACnB,CAAC;AAED,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\treturn new Promise(function(resolve, reject) { reject(new Error(\"Cannot find module '\" + req + \"'.\")); });\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../client-src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/miked/Desktop/DojoAssignments/netCore/dojonames/client-src/$$_gendir lazy\n// module id = ../../../../../client-src/$$_gendir lazy recursive\n// module chunks = main","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport 'rxjs/Rx';\r\n\r\n@Injectable()\r\nexport class ApiService {\r\n\r\n  constructor(private _http: Http) { }\r\n\r\n  getDeck(){\r\n    console.log(\"In API service call get deck\");\r\n    return this._http.get('/api/get_deck')\r\n    .map(data => data.json())\r\n    .toPromise();\r\n  }\r\n\r\n  updateDeck(cardId){\r\n    console.log(\"updating the deck now!\");\r\n    console.log(\"this is the card i am trying to update from the service\", cardId)\r\n    return this._http.get(`/api/update_deck/${cardId}`)\r\n    .map(data => data.json())\r\n    .toPromise();\r\n\r\n  }\r\n  makeNewGame()\r\n  {\r\n    console.log(\"going thru new game service\")\r\n    return this._http.get('/api/create_game_in_database')\r\n    .map(data => data.json())\r\n    .toPromise();\r\n  }\r\n  getGame()\r\n  {\r\n    console.log(\"update game in service\")\r\n    return this._http.get('/api/gameUpdate')\r\n    .map(data => data.json())\r\n    .toPromise();\r\n  }\r\n  gameList()\r\n  {\r\n    console.log(\"gameList\")\r\n    return this._http.get('/api/gameList')\r\n    .map(data => data.json())\r\n    .toPromise();\r\n  }\r\n  joinGame(GameId)\r\n  {\r\n    console.log(\"join game service\", GameId)\r\n    return this._http.get(`/api/join/${GameId}`)\r\n    .map(data => data.json())\r\n    .toPromise();\r\n  }\r\n  submitHint(hint, count)\r\n  {\r\n    console.log(\"submit hint api service\", hint, count)\r\n    return this._http.get(`/api/hint/${hint}/${count}`)\r\n    .map(data => data.json())\r\n    .toPromise();\r\n  }\r\n  endTurn()\r\n  {\r\n    console.log(\"end turn service\")\r\n    return this._http.get('/api/endTurn')\r\n    .map(data => data.json())\r\n    .toPromise();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/miked/Desktop/DojoAssignments/netCore/dojonames/client-src/app/api.service.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".card {\\r\\n    border: 2px solid black;\\r\\n    height: 180px;\\r\\n    padding: 5px;\\r\\n    margin: 15px;\\r\\n    background: #B5FFB5;\\r\\n    text-align: center;\\r\\n    vertical-align: middle;\\r\\n    line-height: 180px;   \\r\\n    font-size: 2em;\\r\\n    text-shadow: -1px 0 black, 0 1px black, 1px 0 black, 0 -1px black;\\r\\n    color: snow;\\r\\n}\\r\\n\\r\\n.redTurn{\\r\\n    border: 50px solid red;\\r\\n}\\r\\n.blueTurn{\\r\\n    border: 50px solid blue;\\r\\n}\\r\\n.redCard {\\r\\n    background: #FE9494;\\r\\n}\\r\\n\\r\\n.blueCard {\\r\\n    background: #6666FF;\\r\\n}\\r\\n\\r\\n.whiteCard {\\r\\n    background: #FFFEB6;\\r\\n}\\r\\n\\r\\n.blackCard {\\r\\n    background: #303030;\\r\\n}\\r\\n.testClass {\\r\\n    background: yellow;\\r\\n}\\r\\n\\r\\n.exposedRed {\\r\\n    background: red;\\r\\n}\\r\\n\\r\\n.exposedBlue {\\r\\n    background: blue;\\r\\n}\\r\\n\\r\\n.exposedWhite {\\r\\n    background: yellow;\\r\\n}\\r\\n\\r\\n.exposedBlack {\\r\\n    background: black;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/miked/Desktop/DojoAssignments/netCore/dojonames/client-src/app/app.component.css\n// module id = ../../../../../client-src/app/app.component.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n\\r\\n<div [ngClass]=\\\"{'redTurn': phase != 'waiting' && (turn == 'red' || phase =='redWin'), 'blueTurn': phase !='waiting' && (turn == 'blue' || phase == 'blueWin')}\\\" class='container'>\\r\\n\\r\\n  <!-- <div class='col-md-12'> -->\\r\\n    <h3>Red Team: {{redTeamScore}}</h3>\\r\\n    <h3>Blue Team: {{blueTeamScore}}</h3>\\r\\n    <div *ngIf=\\\"phase!='waiting'\\\">\\r\\n      <h3>{{turn}} team's turn</h3>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"phase == 'waiting'\\\">\\r\\n      <h3>Waiting for game to start</h3>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"phase == 'hinting' && client== 'guessing'\\\">\\r\\n      <h3>Waiting for Hint...</h3>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"phase == 'hinting' && client == 'hinting'\\\">\\r\\n      <h3>Enter a hint and number of cards</h3>\\r\\n      <form (submit)=\\\"submitHint()\\\">\\r\\n        <label>Hint: </label>\\r\\n        <input type=\\\"text\\\" name=\\\"hint\\\" [(ngModel)]=\\\"hint\\\">\\r\\n        <label># of cards: </label>\\r\\n        <input type=\\\"text\\\" name=\\\"count\\\" [(ngModel)]=\\\"count\\\">\\r\\n        <input type=\\\"submit\\\" value=\\\"Submit Hint\\\">\\r\\n      </form>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"phase == 'guessing' && client=='guessing'\\\">\\r\\n      <h3>Hint: {{LastHint}}</h3>\\r\\n      <h3># of Cards : {{HintCount}}</h3>\\r\\n      <button (click)=\\\"endTurn()\\\">End Turn</button>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"phase == 'redWin'\\\">\\r\\n      <h3>Red Team Wins!</h3>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"phase == 'blueWin'\\\">\\r\\n      <h3>Blue Team Wins!</h3>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"client == 'hinting'\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n          <div *ngFor=\\\"let card of cards; let i = index\\\">\\r\\n            <div class=\\\"clearfix\\\" *ngIf=\\\"i % 5 == 0\\\"></div>\\r\\n            <div class=\\\"col-sm-2 card\\\" *ngIf=\\\"i % 5 == 0\\\" [ngClass]=\\\"{'redCard': card.color == 'red' && !card.isExposed, 'blueCard': card.color == 'blue' && !card.isExposed, 'whiteCard': card.color == 'white' && !card.isExposed, 'blackCard': card.color == 'black' && !card.isExposed, 'testClass': card.isExposed, 'exposedRed': card.isExposed && card.color == 'red', 'exposedBlue': card.isExposed && card.color == 'blue', 'exposedWhite': card.isExposed && card.color == 'white', 'exposedBlack': card.isExposed && card.color == 'black'}\\\">{{card.text}}</div>\\r\\n            <div class=\\\"col-sm-2 card\\\" *ngIf=\\\"i % 5 != 0\\\"[ngClass]=\\\"{'redCard': card.color == 'red' && !card.isExposed, 'blueCard': card.color == 'blue' && !card.isExposed, 'whiteCard': card.color == 'white' && !card.isExposed, 'blackCard': card.color == 'black' && !card.isExposed, 'testClass': card.isExposed, 'exposedRed': card.isExposed && card.color == 'red', 'exposedBlue': card.isExposed && card.color == 'blue', 'exposedWhite': card.isExposed && card.color == 'white', 'exposedBlack': card.isExposed && card.color == 'black'}\\\">{{card.text}}</div>\\r\\n          </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"client == 'guessing'\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div *ngFor=\\\"let card of cards; let i = index\\\">\\r\\n              <div class=\\\"clearfix\\\" *ngIf=\\\"i % 5 == 0\\\"></div>\\r\\n              <div class=\\\"col-md-offset-1 col-md-2 card\\\" *ngIf=\\\"i % 5 == 0\\\" (click)=\\\"clickCard(i)\\\" [ngClass]=\\\"{'exposedRed': card.isExposed && card.color == 'red', 'exposedBlue': card.isExposed && card.color == 'blue', 'exposedWhite': card.isExposed && card.color == 'white', 'exposedBlack': card.isExposed && card.color == 'black'}\\\">{{card.text}}</div>\\r\\n              <div class=\\\"col-md-2 card col-md-offset-1\\\" *ngIf=\\\"i % 5 != 0\\\" (click)=\\\"clickCard(i)\\\" [ngClass]=\\\"{'exposedRed': card.isExposed && card.color == 'red', 'exposedBlue': card.isExposed && card.color == 'blue', 'exposedWhite': card.isExposed && card.color == 'white', 'exposedBlack': card.isExposed && card.color == 'black'}\\\">{{card.text}}</div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <button *ngIf=\\\"client =='waiting'\\\" (click)=\\\"newGame()\\\" class='btn btn-default'>Start a new game!</button>\\r\\n    <div *ngIf=\\\"client == 'waiting'\\\">\\r\\n      <h1>Join Game</h1>\\r\\n      <ul>\\r\\n        <li *ngFor=\\\"let game of games\\\">\\r\\n          <button (click) = \\\"joinGame(game.gameId)\\\">{{game.gameId}}</button>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  <!-- </div> -->\\r\\n</div>\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/miked/Desktop/DojoAssignments/netCore/dojonames/client-src/app/app.component.html\n// module id = ../../../../../client-src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\nimport { ApiService } from './api.service';\r\nimport { Observable } from \"rxjs/Rx\";\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n  GameId;\r\n  cards;\r\n  client = \"waiting\";\r\n  turn = \"\";\r\n  phase = \"\";\r\n  redTeamScore = 0;\r\n  blueTeamScore = 0;\r\n  LastHint = \"\";\r\n  hint=\"\";\r\n  count = 0;\r\n  HintCount;\r\n  games;\r\n\r\n  constructor(private _apiService: ApiService) {}\r\n\r\n  ngOnInit(){\r\n    // this._apiService.getDeck()\r\n    // .then(cards => {this.cards = cards; console.log('got deck', this.cards)})\r\n    // .catch(err => {console.log(err)});\r\n    this._apiService.gameList()\r\n    .then(games => {this.games = games; console.log('got game list', games)})\r\n    .catch(err => {console.log(err)});\r\n    this.intervalCall();\r\n  }\r\n\r\n  clickCard(cardIdx){\r\n    console.log(this.cards[cardIdx]);//update the local copy\r\n    if (!this.cards[cardIdx].isExposed && this.phase == \"guessing\"){\r\n        this.redTeamScore++;\r\n        this.cards[cardIdx].isExposed = true;\r\n        console.log(\"this is the card i am trying to update from the component\", this.cards[cardIdx])\r\n        this._apiService.updateDeck(this.cards[cardIdx].cardId)\r\n        .then(response => {console.log('response: ', response); this.updateGame();})\r\n        .catch(err => {console.log(err)});\r\n        this.intervalCall();\r\n      }\r\n  }\r\n\r\n  newGame(){\r\n    console.log(\"clicked the new game button\")\r\n    this._apiService.makeNewGame()\r\n    .then(response => {console.log(response); this.updateGame();this.client=\"hinting\";\r\n      // this._apiService.getDeck()\r\n      // .then(cards => {this.cards = cards; this.client=\"codeMaster\"; console.log('got deck', this.cards)})\r\n      // .catch(err => {console.log(err)});\r\n    })\r\n    .catch(err => {console.log(err)});\r\n  }\r\n  updateGame(){\r\n    this._apiService.getGame()\r\n    .then(game => {this.turn = game.turn; this.redTeamScore = game.redScore; this.blueTeamScore= game.blueScore; this.phase = game.phase; this.LastHint = game.lastHint; this.HintCount = game.hintCount; this.GameId = game.gameId; console.log('got game', game)})\r\n    .catch(err => {console.log(err)});\r\n    this._apiService.getDeck()\r\n    .then(cards => {this.cards = cards; console.log('got deck', this.cards)})\r\n    .catch(err => {console.log(err)});\r\n    if(this.phase == this.client){\r\n      \r\n    }\r\n  }\r\n  intervalCall(){\r\n    {\r\n      Observable.interval(1000).takeWhile(x => this.phase != this.client || this.phase == \"waiting\").subscribe(x => {\r\n        this.updateGame();\r\n      })\r\n    }\r\n  }\r\n  joinGame(GameId){\r\n    this._apiService.joinGame(GameId)\r\n    .then(() => {this.client = \"guessing\"; this.updateGame();})\r\n    .catch(err => {console.log(err)})\r\n  }\r\n  submitHint(){\r\n    this._apiService.submitHint(this.hint, this.count);\r\n    this.updateGame();\r\n    this.hint=\"\";\r\n    this.count=0;\r\n    this.intervalCall();\r\n  }\r\n  endTurn(){\r\n    this._apiService.endTurn();\r\n    this.updateGame();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/miked/Desktop/DojoAssignments/netCore/dojonames/client-src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { ApiService } from './api.service';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpModule } from '@angular/http';\r\nimport { FormsModule } from '@angular/forms';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpModule,\r\n    FormsModule\r\n  ],\r\n  providers: [ApiService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/miked/Desktop/DojoAssignments/netCore/dojonames/client-src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/miked/Desktop/DojoAssignments/netCore/dojonames/client-src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/miked/Desktop/DojoAssignments/netCore/dojonames/client-src/main.ts"],"sourceRoot":"webpack:///"}
>>>>>>> 93e294360958af109b6078a87ca959da79be7938
